//
//  ContentView.swift
//  Friends
//
//  Created by David Evans on 27/4/2022.
//

import SwiftUI
import Foundation

struct ContentView: View {
    @Environment(\.managedObjectContext) var moc
//    @FetchRequest(sortDescriptors: [SortDescriptor(\.name)]) var cachedUsers: FetchedResults<CachedUser>
    
    @State private var users = [User]()
    @State private var searchString = String()
    @State private var sortDescriptors = []
        
    var body: some View {
        VStack {
            NavigationView {
                List {
                    ForEach(users) { user in
                        NavigationLink {
                            UserView(user: user)
                        } label: {
                            UserLabelView(user: user)
                        }
                    }
                }
                .navigationTitle("Friends")
            }
            .task {
                await loadData()
            }
            Spacer()
            NavigationView {
                FilteredList(filterKey: "name",
                             filterValue: searchString,
                             filterPredicate: .contains,
                             sortDescriptors: [SortDescriptor(\CachedUser.name)] )
                { (cachedUser: CachedUser) in
                    let user = User(cachedUser: cachedUser)
                    NavigationLink {
                        UserView(user: user)
                    } label: {
                        UserLabelView(user: user)
                    }
                }
                .navigationTitle("Friends with \(searchString)")
            }
//            Button("Save to Core Data") {
//                loadCoreData()
//            }
            TextField("Filter", text: $searchString)
                .autocapitalization(.none)
                .padding(.horizontal)

        }
        
    }

    func saveCoreData()
    {
        users.forEach { user in
            let cachedUser = CachedUser(context: moc)
            cachedUser.id = user.id
            cachedUser.name = user.name
            cachedUser.isActive = user.isActive
            cachedUser.age = Int16(user.age)
            cachedUser.company = user.company
            cachedUser.email = user.email
            cachedUser.address = user.address
            cachedUser.about = user.about
            cachedUser.registered = user.registered
            cachedUser.tags = user.tagsList
            
            user.friends.forEach {
                let cachedFriend = CachedFriend(context: moc)
                cachedFriend.id  = $0.id
                cachedFriend.name = $0.name
                
                cachedUser.addToFriends(cachedFriend) // this is declared in the interface generated by XCode
            }
            
            if moc.hasChanges {
                do {
                    try moc.save()
                } catch {
                    print("Error saving to CoreData - \(error.localizedDescription)")
                }
            }
        }
        
    }
    
    func loadData() async {
        guard users.isEmpty else { return }

        do {
            guard let url = URL(string: "https://www.hackingwithswift.com/samples/friendface.json") else {
                fatalError("Download of Friendface data failed")
            }
            let (data, _) = try await URLSession.shared.data(from: url)
            
            let decoder = JSONDecoder()
            decoder.dateDecodingStrategy = .iso8601
            users = try decoder.decode([User].self, from: data)
            
            // next save it into core data
            await MainActor.run {
                saveCoreData()
            }
            
        } catch {
            fatalError("Decoding of Friendface data failed \(error.localizedDescription)")
        }
    }

}

struct ContentView_Previews: PreviewProvider {
    
    static var previews: some View {
        ContentView()
    }
}
